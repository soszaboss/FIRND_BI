openapi: 3.0.3
info:
  title: FIRND BI
  version: 1.0.0
  description: Documentation pour la consomation de l api
paths:
  /auth/api/token/:
    post:
      operationId: auth_api_token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MyTokenObtainPair'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyTokenObtainPair'
          description: ''
  /auth/api/token/refresh/:
    post:
      operationId: auth_api_token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /auth/login/:
    post:
      operationId: auth_login_create
      description: Vue pour gérer l'authentification avec OTP.
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /auth/verify-otp-via-email/:
    post:
      operationId: auth_verify_otp_via_email_create
      description: Vue pour vérifier le code OTP.
      tags:
      - auth
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /documents/demandes-soumission/:
    get:
      operationId: documents_demandes_soumission_list
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DemandeSoumission'
          description: ''
    post:
      operationId: documents_demandes_soumission_create
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemandeSoumission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DemandeSoumission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DemandeSoumission'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemandeSoumission'
          description: ''
  /documents/demandes-soumission/{id}/:
    get:
      operationId: documents_demandes_soumission_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemandeSoumission'
          description: ''
    put:
      operationId: documents_demandes_soumission_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DemandeSoumission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DemandeSoumission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DemandeSoumission'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemandeSoumission'
          description: ''
    patch:
      operationId: documents_demandes_soumission_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDemandeSoumission'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDemandeSoumission'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDemandeSoumission'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemandeSoumission'
          description: ''
    delete:
      operationId: documents_demandes_soumission_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /documents/demandes-soumission/status/:
    get:
      operationId: documents_demandes_soumission_status_retrieve
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /documents/diplomas/:
    get:
      operationId: documents_diplomas_list
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Diploma'
          description: ''
    post:
      operationId: documents_diplomas_create
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Diploma'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Diploma'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Diploma'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diploma'
          description: ''
  /documents/diplomas/{id}/:
    get:
      operationId: documents_diplomas_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diploma'
          description: ''
    put:
      operationId: documents_diplomas_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Diploma'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Diploma'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Diploma'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diploma'
          description: ''
    patch:
      operationId: documents_diplomas_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDiploma'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDiploma'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDiploma'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diploma'
          description: ''
    delete:
      operationId: documents_diplomas_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /documents/download-document/{url}/:
    get:
      operationId: documents_download_document_retrieve
      parameters:
      - in: path
        name: url
        schema:
          type: string
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /documents/download-public-key/:
    get:
      operationId: documents_download_public_key_retrieve
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /documents/etudiants/:
    get:
      operationId: documents_etudiants_list
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Etudiant'
          description: ''
    post:
      operationId: documents_etudiants_create
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Etudiant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Etudiant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Etudiant'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Etudiant'
          description: ''
  /documents/etudiants/{id}/:
    get:
      operationId: documents_etudiants_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Etudiant'
          description: ''
    put:
      operationId: documents_etudiants_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Etudiant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Etudiant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Etudiant'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Etudiant'
          description: ''
    patch:
      operationId: documents_etudiants_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - documents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEtudiant'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEtudiant'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEtudiant'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Etudiant'
          description: ''
    delete:
      operationId: documents_etudiants_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /documents/signe-document/{url}/:
    post:
      operationId: documents_signe_document_create
      parameters:
      - in: path
        name: url
        schema:
          type: string
        required: true
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /documents/verify-document/:
    post:
      operationId: documents_verify_document_create
      tags:
      - documents
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          description: No response body
  /files/:
    get:
      operationId: files_list
      tags:
      - files
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/File'
          description: ''
    post:
      operationId: files_create
      tags:
      - files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/File'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/File'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
  /files/{id}/:
    get:
      operationId: files_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this diploma.
        required: true
      tags:
      - files
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
    put:
      operationId: files_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this diploma.
        required: true
      tags:
      - files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/File'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/File'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/File'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
    patch:
      operationId: files_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this diploma.
        required: true
      tags:
      - files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFile'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/File'
          description: ''
    delete:
      operationId: files_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
        description: A unique value identifying this diploma.
        required: true
      tags:
      - files
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /users/:
    get:
      operationId: users_list
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CreateUser'
          description: ''
  /users/admins/:
    get:
      operationId: users_admins_list
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiplomeUser'
          description: ''
    post:
      operationId: users_admins_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiplomeUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiplomeUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiplomeUser'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiplomeUser'
          description: ''
  /users/diplomes/:
    get:
      operationId: users_diplomes_list
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiplomeUser'
          description: ''
    post:
      operationId: users_diplomes_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiplomeUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiplomeUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiplomeUser'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiplomeUser'
          description: ''
  /users/institutions/:
    get:
      operationId: users_institutions_list
      tags:
      - users
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DiplomeUser'
          description: ''
    post:
      operationId: users_institutions_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiplomeUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DiplomeUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DiplomeUser'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DiplomeUser'
          description: ''
components:
  schemas:
    CreateUser:
      type: object
      description: |-
        Création d'un serializer pour la de création de comptes utilisateurs
        avec une gestion de differentes roles ( admin, institution, diplomé )
      properties:
        first_name:
          type: string
          maxLength: 35
        last_name:
          type: string
          maxLength: 35
        phone_number:
          type: string
          nullable: true
          maxLength: 15
        password:
          type: string
          writeOnly: true
          maxLength: 128
        email:
          type: string
          format: email
          maxLength: 254
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        is_active:
          type: boolean
          readOnly: true
      required:
      - email
      - first_name
      - is_active
      - last_login
      - last_name
      - password
      - role
    DemandeSoumission:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        titre:
          type: string
          maxLength: 120
        commentaire:
          type: string
          nullable: true
        etudiants:
          type: array
          items:
            $ref: '#/components/schemas/Etudiant'
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          minimum: -2147483648
          maximum: 2147483647
        diplome:
          type: array
          items:
            $ref: '#/components/schemas/Diploma'
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - diplome
      - etudiants
      - id
      - modified
      - titre
    Diploma:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        user:
          type: integer
        diploma:
          type: string
          format: uri
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - diploma
      - id
      - modified
      - user
    DiplomeUser:
      type: object
      description: |-
        Création d'un serializer pour la de création de comptes utilisateurs
        avec une gestion de differentes roles ( admin, institution, diplomé )
      properties:
        first_name:
          type: string
          maxLength: 35
        last_name:
          type: string
          maxLength: 35
        phone_number:
          type: string
          nullable: true
          maxLength: 15
        password:
          type: string
          writeOnly: true
          maxLength: 128
        email:
          type: string
          format: email
          maxLength: 254
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          readOnly: true
        last_login:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        is_active:
          type: boolean
          readOnly: true
      required:
      - email
      - first_name
      - is_active
      - last_login
      - last_name
      - password
      - role
    Etudiant:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        diplomate:
          type: integer
        code:
          type: string
          format: uuid
          readOnly: true
        full_name:
          type: string
          readOnly: true
        phone_number:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - code
      - created
      - diplomate
      - full_name
      - id
      - modified
      - phone_number
    File:
      type: object
      properties:
        user:
          type: integer
        diploma:
          type: string
          format: uri
      required:
      - diploma
      - user
    MyTokenObtainPair:
      type: object
      description: |-
        Class personnalisé pour ajouter des claims supplémentaire tel que
        le role de l'utilisateur.
      properties:
        email:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    PatchedDemandeSoumission:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        titre:
          type: string
          maxLength: 120
        commentaire:
          type: string
          nullable: true
        etudiants:
          type: array
          items:
            $ref: '#/components/schemas/Etudiant'
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          minimum: -2147483648
          maximum: 2147483647
        diplome:
          type: array
          items:
            $ref: '#/components/schemas/Diploma'
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedDiploma:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        user:
          type: integer
        diploma:
          type: string
          format: uri
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedEtudiant:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        diplomate:
          type: integer
        code:
          type: string
          format: uuid
          readOnly: true
        full_name:
          type: string
          readOnly: true
        phone_number:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedFile:
      type: object
      properties:
        user:
          type: integer
        diploma:
          type: string
          format: uri
    RoleEnum:
      enum:
      - ADMIN
      - DIPLOME
      - INSTITUTION
      type: string
      description: |-
        * `ADMIN` - Admin
        * `DIPLOME` - Diplomé
        * `INSTITUTION` - Institution
    StatusEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      type: integer
      description: |-
        * `1` - SOUMIS
        * `2` - TRAITER
        * `3` - RECEPTION
        * `4` - FIN DE TRAITEMENT
        * `5` - REJET
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
      required:
      - access
      - refresh
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
